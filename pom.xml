<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" 
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>me.duras</groupId>
  <artifactId>octosigndss</artifactId>
  <version>0.1.0</version>

  <name>octosigndss</name>
  <url>https://github.com/durasj/octosign-dss</url>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>11</maven.compiler.source>
    <maven.compiler.target>11</maven.compiler.target>
  </properties>

  <repositories>
    <repository>
      <id>cefdigital</id>
      <name>cefdigital</name>
      <url>https://ec.europa.eu/cefdigital/artifact/content/repositories/esignaturedss/</url>
    </repository>
  </repositories>

  <profiles>
    <profile>
      <id>windows</id>
      <activation>
        <os>
          <family>windows</family>
        </os>
      </activation>
      <properties>
          <crypto.modules>jdk.crypto.cryptoki,jdk.crypto.mscapi</crypto.modules>
      </properties>
    </profile>
    <profile>
      <id>unix</id>
      <activation>
        <os>
          <family>unix</family>
        </os>
      </activation>
      <properties>
          <crypto.modules>jdk.crypto.cryptoki</crypto.modules>
      </properties>
    </profile>
  </profiles>

  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.13.1</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>eu.europa.ec.joinup.sd-dss</groupId>
      <artifactId>dss-signature-remote</artifactId>
      <version>5.6</version>
    </dependency>

    <dependency>
      <groupId>eu.europa.ec.joinup.sd-dss</groupId>
      <artifactId>dss-service</artifactId>
      <version>5.6</version>
      <exclusions>
        <exclusion>
          <artifactId>commons-logging</artifactId>
          <groupId>commons-logging</groupId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>eu.europa.ec.joinup.sd-dss</groupId>
      <artifactId>dss-crl-parser-stream</artifactId>
      <version>5.6</version>
    </dependency>

    <dependency>
      <groupId>eu.europa.ec.joinup.sd-dss</groupId>
      <artifactId>dss-pades-pdfbox</artifactId>
      <version>5.6</version>
    </dependency>

    <dependency>
      <groupId>eu.europa.ec.joinup.sd-dss</groupId>
      <artifactId>dss-token</artifactId>
      <version>5.6</version>
    </dependency>

    <dependency>
      <groupId>eu.europa.ec.joinup.sd-dss</groupId>
      <artifactId>dss-utils-google-guava</artifactId>
      <version>5.6</version>
    </dependency>

    <dependency>
      <groupId>eu.europa.ec.joinup.sd-dss</groupId>
      <artifactId>dss-tsl-validation</artifactId>
      <version>5.6</version>
    </dependency>

    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-simple</artifactId>
      <version>1.7.28</version>
    </dependency>
  </dependencies>

  <build>
    <pluginManagement>      <!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) -->
      <plugins>
        <!-- clean lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#clean_Lifecycle -->
        <plugin>
          <artifactId>maven-clean-plugin</artifactId>
          <version>3.1.0</version>
        </plugin>
        <!-- default lifecycle, jar packaging: see https://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_jar_packaging -->
        <plugin>
          <artifactId>maven-resources-plugin</artifactId>
          <version>3.1.0</version>
        </plugin>
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.8.0</version>
        </plugin>
        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.22.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-install-plugin</artifactId>
          <version>2.5.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>2.8.2</version>
        </plugin>
        <!-- site lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#site_Lifecycle -->
        <plugin>
          <artifactId>maven-site-plugin</artifactId>
          <version>3.8.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-project-info-reports-plugin</artifactId>
          <version>3.0.0</version>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>3.1.2</version>
          <configuration>
            <excludes>
              <exclude>**/log4j.properties</exclude>
            </excludes>
            <archive>
              <manifest>
                <addClasspath>true</addClasspath>
                <mainClass>me.duras.octosigndss.App</mainClass>
                <classpathPrefix>dependency-jars/</classpathPrefix>
              </manifest>
            </archive>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-dependency-plugin</artifactId>
          <version>3.1.1</version>
          <executions>
            <execution>
              <id>copy-dependencies</id>
              <phase>package</phase>
              <goals>
                <goal>copy-dependencies</goal>
              </goals>
              <configuration>
                <!-- exclude junit, we need runtime dependency only -->
                <includeScope>runtime</includeScope>
                <outputDirectory>${project.build.directory}/dependency-jars/</outputDirectory>
              </configuration>
            </execution>
          </executions>
        </plugin>

      <plugin>
        <groupId>com.igormaznitsa</groupId>
        <artifactId>mvn-jlink-wrapper</artifactId>
        <version>1.0.3</version>
        <executions>
          <execution>
            <id>cache-jdk-11</id>
            <goals>
              <goal>cache-jdk</goal>
            </goals>
            <configuration>
              <jdkPathProperty>jlink.jdk.path</jdkPathProperty>
              <jdkCachePath>${project.build.directory}${file.separator}jdkCache</jdkCachePath>

              <provider>ADOPT</provider>
              <providerConfig>
                <release>jdk-11.0.7+10_openj9-0.20.0</release>
                <arch>x64</arch>
                <type>jdk</type>
                <impl>openj9</impl>
              </providerConfig>

            </configuration>
          </execution>

          <execution>
            <id>call-jdeps</id>
            <goals>
              <goal>jdeps</goal>
            </goals>
            <configuration>
              <output>${project.build.directory}${file.separator}jdeps.out</output>
              <options>
                <option>--class-path</option>
                <option>./target/dependency-jars/*</option>
                <option>-R</option>
                <option>--multi-release</option>
                <option>11</option>
                <option>-f</option>
                <option>.*jar</option>
                <option>${project.build.directory}${file.separator}${project.build.finalName}.jar</option>
              </options>
            </configuration>
          </execution>

          <execution>
            <id>call-jlink</id>
            <goals>
              <goal>jlink</goal>
            </goals>
            <configuration>
              <output>${project.build.directory}${file.separator}preparedJDK</output>
              <addModules>
                <module>java.compiler</module>
              </addModules>
              <options>
                <option>--compress=2</option>
                <option>--no-header-files</option>
                <option>--no-man-pages</option>
                <option>--add-modules</option>
                <option>java.base,java.xml,java.desktop,java.naming,java.datatransfer,java.logging,${crypto.modules}</option>
              </options>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
